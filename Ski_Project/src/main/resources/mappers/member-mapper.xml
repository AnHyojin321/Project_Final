<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="member">
	
	<resultMap id="memberResultSet" type="member">
		<id column="MEMBER_NO" property="memberNo" />
		<result column="MEMBER_ID" property="memberId" />		
		<result column="MEMBER_PWD" property="memberPwd" />
		<result column="MEMBER_NAME" property="memberName" />
		<result column="EMAIL" property="email" />
		<result column="TEMP_PWD" property ="tempPwd" />
		<result column="BIRTH_DATE" property="birthDate" />
		<result column="PHONE" property="phone" />
		<result column="ADDRESS" property="address" />
		<result column="CREATE_DATE" property="createDate" />
		<result column="KAKAO_LOGIN" property="kakaoLogin" />
		<result column="GOOGLE_LOGIN" property="googleLogin" />
		<result column="NAVER_LOGIN" property="naverLogin" />
		<result column="MEMBER_STATUS" property="memberStatus" />
		<result column="KAKAO_ACCESS_TOKEN" property="kakaoAccessToken" />
   		<result column="KAKAO_REFRESH_TOKEN" property="kakaoRefreshToken" />
		<result column="LOGIN_TYPE" property="loginType" />
	</resultMap>
	
	<resultMap id="emailCertResultSet" type="emailCert">
		<id column="CERT_NO" property="certNo" />
		<result column="EMAIL" property="email" />
		<result column="CREATE_TIME" property="createTime" />
	</resultMap>
	
	<select id="loginMember" 
			parameterType="member"
			resultMap="memberResultSet">
		SELECT *
		  FROM MEMBER
		 WHERE MEMBER_ID = #{memberId}
		   AND MEMBER_STATUS = 'Y'
	</select>
	
<insert id="insertMember" parameterType="member">
    INSERT INTO MEMBER (
        MEMBER_NO, 
        MEMBER_ID, 
        MEMBER_PWD, 
        MEMBER_NAME, 
        EMAIL, 
        BIRTH_DATE, 
        PHONE,
        ADDRESS,
        KAKAO_LOGIN,
        NAVER_LOGIN,
        MEMBER_STATUS,
        LOGIN_TYPE
    )
    VALUES (
        SEQ_MEMBER_NO.NEXTVAL, 
        #{memberId}, 
        #{memberPwd}, 
        #{memberName}, 
        #{email}, 
        #{birthDate}, 
        #{phone}, 
        #{address}, 
        #{kakaoLogin}, 
        #{naverLogin},
        'Y',
        #{loginType} <!-- 로그인 타입 추가 -->
    )
</insert>




	
	<select id="idCheck" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		  FROM MEMBER
		 WHERE MEMBER_ID = #{checkId}
	</select>
	
	<insert id="sendCertNo" parameterType="emailCert">
		INSERT INTO EMAIL_CERT(EMAIL
							 , CERT_NO
							 , CREATE_TIME)
					 VALUES(#{email}
					 	  , #{certNo}
					 	  , #{createTime})
	</insert>
				
		<select id="validate" resultMap="emailCertResultSet">
		    SELECT EMAIL, CERT_NO, CREATE_TIME
		    FROM EMAIL_CERT
		    WHERE EMAIL = #{email}
		      AND CERT_NO = #{checkNo}
		      AND CREATE_TIME >= SYSDATE - (3 / 1440)
		</select>

	
	<insert id="insertEmailCert" parameterType="map">
    INSERT INTO EMAIL_CERT (
        EMAIL,
        CERT_NO,
        CREATE_TIME
    ) VALUES (
        #{email},
        #{certNo},
        SYSDATE
    )
</insert>
	

<select id="findId" parameterType="map" resultType="string">
    SELECT MEMBER_ID
    FROM MEMBER
    WHERE MEMBER_NAME = #{memberName}
      AND EMAIL = #{email}
      AND KAKAO_LOGIN IS NULL <!-- 일반 회원만 조회 -->
</select>

	
	
    <select id="findPwd" parameterType="map" resultType="string">
        SELECT MEMBER_PWD
        FROM MEMBER
        WHERE MEMBER_ID = #{memberId}
          AND EMAIL = #{email}
    </select>
	
			
		<update id="updatePassword" parameterType="map">
		    UPDATE MEMBER
		       SET TEMP_PWD = #{tempPwd}
		     WHERE MEMBER_ID = #{memberId}
		</update>
		
<update id="updateMember" parameterType="member">
    UPDATE MEMBER
       SET MEMBER_NAME = #{memberName},
           MEMBER_ID = #{memberId},
           EMAIL = #{email},
           BIRTH_DATE = #{birthDate},
           PHONE = #{phone},
           ADDRESS = #{address},
           NAVER_LOGIN = #{naverLogin},
           KAKAO_LOGIN = #{kakaoLogin},
           LOGIN_TYPE = #{loginType} <!-- 로그인 타입 추가 -->
     WHERE MEMBER_ID = #{memberId}
       AND MEMBER_STATUS = 'Y'
</update>

	<update id="deleteMember" parameterType="string">
		UPDATE MEMBER
		   SET MEMBER_STATUS = 'N'
		 WHERE MEMBER_ID = #{memberId}
		   AND MEMBER_STATUS = 'Y'
	</update>

	<update id="changePwd" parameterType="map">
		UPDATE MEMBER
		   SET MEMBER_PWD = #{memberPwd}
		     , TEMP_PWD = NULL
		 WHERE MEMBER_NO = #{memberNo}
		   AND MEMBER_STATUS = 'Y'
	</update>

	
	<select id="selectEncPw" parameterType="_int" resultType="string">
		SELECT MEMBER_PWD
		  FROM MEMBER
		 WHERE MEMBER_NO = #{memberNo}
	</select>
	<select id="selectTempPw" parameterType="_int" resultType="string">
    SELECT TEMP_PWD
      FROM MEMBER
     WHERE MEMBER_NO = #{memberNo}
</select>

    <!-- 카카오 ID로 회원 조회 -->
<select id="selectMemberByKakaoId" parameterType="string" resultMap="memberResultSet">
    SELECT *
      FROM MEMBER
     WHERE KAKAO_LOGIN = #{kakaoId}
       AND LOGIN_TYPE = 'KAKAO' <!-- 카카오 로그인 타입 -->
</select>

<insert id="insertKakaoMember" parameterType="member">
    INSERT INTO MEMBER (
        MEMBER_NO,
        MEMBER_ID,
        MEMBER_NAME,
        EMAIL,
        KAKAO_LOGIN,
        MEMBER_PWD,
        PHONE,
        BIRTH_DATE,
        CREATE_DATE,
        MEMBER_STATUS,
        LOGIN_TYPE
    )
    VALUES (
        SEQ_MEMBER_NO.NEXTVAL,
        #{memberId},
        #{memberName},
        #{email},
        #{kakaoLogin},
        #{memberPwd},
        #{phone},
        #{birthDate},
        SYSDATE,
        #{memberStatus},
        'KAKAO' <!-- 카카오 로그인 타입 -->
    )
</insert>


<select id="findMemberByEmail" parameterType="string" resultMap="memberResultSet">
    SELECT *
      FROM MEMBER
     WHERE EMAIL = #{email}
</select>

    <!-- 네이버 ID로 회원 조회 -->
<select id="selectMemberByNaverId" parameterType="string" resultMap="memberResultSet">
    SELECT *
      FROM MEMBER
     WHERE NAVER_LOGIN = #{naverId}
       AND LOGIN_TYPE = 'NAVER' <!-- 네이버 로그인 타입 -->
</select>


    <!-- 네이버 회원가입 -->
    <insert id="insertNaverMember" parameterType="member">
        INSERT INTO MEMBER (
            MEMBER_NO,
            MEMBER_ID,
            MEMBER_NAME,
            EMAIL,
            NAVER_LOGIN,
            MEMBER_PWD,
            PHONE,
            BIRTH_DATE,
            CREATE_DATE,
            MEMBER_STATUS,
            LOGIN_TYPE
        )
        VALUES (
            SEQ_MEMBER_NO.NEXTVAL,
            #{memberId},
            #{memberName},
            #{email},
            #{naverLogin},
            #{memberPwd}, <!-- 암호화된 비밀번호를 설정 -->
            #{phone},     <!-- 기본 전화번호 -->
            #{birthDate}, <!-- 기본 생년월일 -->
            SYSDATE,
            #{memberStatus}, <!-- 활성 상태 -->
            'NAVER' <!-- 네이버 로그인 타입 -->
        )
    </insert>
	
</mapper>